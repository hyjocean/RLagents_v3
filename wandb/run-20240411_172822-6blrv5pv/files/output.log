device: cpu
padded_paths:[[(4, 7), (3, 4)], [(4, 6), (3, 5)], [(4, 6), (2, 5)]]
Epoch 0: Actor Loss = 1.6068636178970337
padded_paths:[[(6, 15), (0, 17)], [(5, 15), (1, 17)], [(4, 15), (2, 17)], [(3, 15), (3, 17)], [(2, 15), (4, 17)], [(1, 15), (4, 18)], [(1, 14), (5, 18)], [(1, 13), (5, 19)], [(1, 12), (6, 19)], [(1, 11), (7, 19)], [(1, 10), (8, 19)], [(1, 9), (8, 19)], [(1, 8), (8, 19)], [(1, 7), (8, 19)], [(1, 6), (8, 19)], [(1, 5), (8, 19)], [(1, 4), (8, 19)], [(1, 3), (8, 19)], [(1, 2), (8, 19)], [(1, 1), (8, 19)]]
padded_paths:[[(0, 6), (0, 4)], [(1, 6), (0, 3)], [(2, 6), (1, 3)], [(2, 6), (2, 3)], [(2, 6), (3, 3)], [(2, 6), (3, 2)], [(2, 6), (4, 2)], [(2, 6), (5, 2)], [(2, 6), (6, 2)]]
padded_paths:[[(2, 9), (0, 1)], [(2, 8), (1, 1)], [(2, 7), (1, 2)], [(2, 6), (2, 2)], [(3, 6), (3, 2)], [(3, 5), (4, 2)], [(3, 4), (5, 2)], [(4, 4), (6, 2)], [(5, 4), (6, 2)]]
padded_paths:[[(8, 3), (7, 2)], [(8, 2), (7, 3)], [(7, 2), (8, 3)], [(6, 2), (8, 4)], [(5, 2), (8, 5)], [(5, 2), (8, 6)], [(5, 2), (8, 7)], [(5, 2), (8, 8)]]
padded_paths:[[(5, 2), (2, 6)], [(5, 3), (2, 5)], [(4, 3), (3, 5)], [(4, 4), (3, 4)], [(4, 4), (3, 3)], [(3, 4), (3, 3)], [(3, 5), (3, 3)], [(3, 6), (3, 3)], [(3, 7), (3, 3)]]
padded_paths:[[(12, 14), (9, 14)], [(12, 13), (9, 13)], [(11, 13), (8, 13)], [(11, 12), (7, 13)], [(11, 11), (6, 13)], [(11, 11), (5, 13)], [(11, 11), (4, 13)], [(11, 11), (4, 12)], [(11, 11), (3, 12)], [(11, 11), (2, 12)], [(11, 11), (2, 11)], [(11, 11), (1, 11)], [(11, 11), (0, 11)]]
padded_paths:[[(3, 0), (6, 7)], [(4, 0), (5, 7)], [(5, 0), (4, 7)], [(6, 0), (3, 7)], [(6, 1), (2, 7)], [(6, 2), (1, 7)], [(6, 3), (1, 7)], [(6, 4), (1, 7)], [(6, 5), (1, 7)]]
padded_paths:[[(1, 13), (14, 11)], [(2, 13), (14, 12)], [(2, 12), (14, 13)], [(2, 11), (13, 13)], [(2, 10), (12, 13)], [(2, 9), (11, 13)], [(2, 8), (10, 13)], [(3, 8), (9, 13)], [(3, 7), (8, 13)], [(4, 7), (7, 13)], [(4, 7), (6, 13)], [(4, 7), (5, 13)], [(4, 7), (4, 13)], [(4, 7), (3, 13)]]
padded_paths:[[(7, 4), (6, 7)], [(6, 4), (5, 7)], [(5, 4), (4, 7)], [(5, 5), (4, 6)], [(5, 6), (4, 5)], [(4, 6), (4, 4)], [(3, 6), (4, 3)], [(3, 7), (3, 3)], [(3, 8), (3, 3)]]
padded_paths:[[(11, 9), (6, 8)], [(11, 10), (5, 8)], [(11, 11), (5, 7)], [(11, 12), (4, 7)], [(11, 13), (4, 6)], [(10, 13), (3, 6)], [(10, 13), (2, 6)], [(10, 13), (2, 5)], [(10, 13), (2, 4)], [(10, 13), (2, 3)]]
padded_paths:[[(6, 2), (2, 3)], [(5, 2), (2, 4)], [(5, 3), (2, 5)], [(4, 3), (2, 6)], [(4, 3), (3, 6)], [(4, 3), (4, 6)], [(4, 3), (5, 6)], [(4, 3), (6, 6)], [(4, 3), (7, 6)], [(4, 3), (8, 6)]]
padded_paths:[[(10, 4), (11, 0)], [(10, 5), (12, 0)], [(9, 5), (13, 0)], [(8, 5), (14, 0)], [(7, 5), (15, 0)], [(6, 5), (15, 1)], [(6, 5), (15, 2)], [(6, 5), (16, 2)], [(6, 5), (16, 3)], [(6, 5), (16, 4)], [(6, 5), (16, 5)], [(6, 5), (16, 6)], [(6, 5), (16, 7)], [(6, 5), (16, 8)], [(6, 5), (16, 9)], [(6, 5), (16, 10)], [(6, 5), (17, 10)], [(6, 5), (18, 10)], [(6, 5), (19, 10)]]
padded_paths:[[(8, 7), (10, 0)], [(8, 8), (9, 0)], [(7, 8), (9, 1)], [(7, 9), (8, 1)], [(7, 10), (8, 2)], [(6, 10), (8, 3)], [(5, 10), (8, 4)], [(4, 10), (8, 5)], [(3, 10), (7, 5)], [(3, 10), (6, 5)], [(3, 10), (5, 5)], [(3, 10), (4, 5)], [(3, 10), (4, 6)], [(3, 10), (3, 6)], [(3, 10), (2, 6)], [(3, 10), (2, 7)], [(3, 10), (2, 8)]]
padded_paths:[[(4, 9), (0, 11)], [(4, 8), (0, 10)], [(3, 8), (0, 9)], [(3, 7), (0, 8)], [(3, 6), (0, 7)], [(3, 5), (0, 6)], [(3, 5), (0, 5)], [(3, 5), (0, 4)], [(3, 5), (1, 4)], [(3, 5), (2, 4)], [(3, 5), (3, 4)]]
padded_paths:[[(0, 9), (7, 2)], [(1, 9), (7, 3)], [(1, 8), (6, 3)], [(2, 8), (6, 4)], [(3, 8), (5, 4)], [(3, 7), (4, 4)], [(3, 6), (3, 4)], [(4, 6), (2, 4)], [(4, 5), (1, 4)], [(5, 5), (1, 4)], [(5, 4), (1, 4)], [(6, 4), (1, 4)], [(7, 4), (1, 4)], [(7, 3), (1, 4)], [(7, 2), (1, 4)]]
padded_paths:[[(1, 0), (1, 6)], [(2, 0), (1, 7)], [(2, 1), (2, 7)], [(2, 2), (2, 7)], [(2, 3), (2, 7)], [(2, 4), (2, 7)], [(2, 5), (2, 7)], [(2, 6), (2, 7)]]
padded_paths:[[(13, 0), (6, 12)], [(14, 0), (5, 12)], [(14, 1), (5, 11)], [(14, 2), (5, 10)], [(14, 3), (5, 9)], [(14, 4), (5, 8)], [(14, 5), (5, 7)], [(14, 6), (5, 6)], [(14, 7), (5, 5)], [(14, 8), (5, 4)], [(14, 9), (5, 3)], [(14, 10), (5, 2)], [(14, 11), (5, 2)], [(14, 12), (5, 2)], [(14, 13), (5, 2)]]
/home/bld/anaconda3/envs/raylib2/lib/python3.8/site-packages/torch/autograd/__init__.py:147: UserWarning: CUDA initialization: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 2: out of memory (Triggered internally at  ../c10/cuda/CUDAFunctions.cpp:115.)
  Variable._execution_engine.run_backward(
padded_paths:[[(3, 6), (8, 0)], [(3, 7), (8, 1)], [(3, 8), (7, 1)], [(4, 8), (7, 2)], [(4, 9), (7, 3)], [(5, 9), (7, 4)], [(5, 9), (7, 5)], [(5, 9), (7, 6)], [(5, 9), (8, 6)], [(5, 9), (8, 7)], [(5, 9), (8, 8)]]
padded_paths:[[(15, 7), (14, 5)], [(16, 7), (13, 5)], [(16, 8), (13, 4)], [(17, 8), (12, 4)], [(18, 8), (12, 3)], [(18, 9), (11, 3)], [(18, 10), (10, 3)], [(18, 11), (10, 2)], [(19, 11), (9, 2)], [(19, 12), (8, 2)], [(19, 13), (7, 2)], [(19, 13), (6, 2)], [(19, 13), (5, 2)], [(19, 13), (4, 2)]]
padded_paths:[[(0, 7), (7, 5)], [(0, 8), (7, 4)], [(1, 8), (8, 4)], [(2, 8), (8, 3)], [(3, 8), (9, 3)], [(4, 8), (9, 2)], [(5, 8), (10, 2)], [(6, 8), (10, 2)], [(7, 8), (10, 2)], [(8, 8), (10, 2)]]
padded_paths:[[(6, 1), (9, 5)], [(5, 1), (8, 5)], [(4, 1), (7, 5)], [(3, 1), (6, 5)], [(2, 1), (6, 4)], [(1, 1), (5, 4)], [(0, 1), (4, 4)], [(0, 1), (3, 4)], [(0, 1), (3, 3)], [(0, 1), (2, 3)], [(0, 1), (1, 3)], [(0, 1), (0, 3)]]
padded_paths:[[(3, 7), (4, 6)], [(3, 8), (4, 7)], [(2, 8), (4, 8)], [(2, 9), (5, 8)], [(2, 9), (6, 8)]]
padded_paths:[[(0, 5), (8, 2)], [(0, 4), (7, 2)], [(0, 3), (6, 2)], [(1, 3), (5, 2)], [(1, 2), (4, 2)], [(2, 2), (4, 3)], [(2, 2), (3, 3)], [(2, 2), (3, 4)], [(2, 2), (2, 4)], [(2, 2), (1, 4)]]
Traceback (most recent call last):
  File "scripts_0.py", line 150, in <module>
    train_a2c(env, actor_net, critic_net)
  File "scripts_0.py", line 88, in train_a2c
    result = env.env.parse_path(padded_paths)
  File "/home/bld/HK_RL/RLagents_v3/mMAPF_env/MAPF_env/envs/baseenv.py", line 350, in parse_path
    observations = [self._observe(agent) for agent in range(1, self.num_agents+1)]
  File "/home/bld/HK_RL/RLagents_v3/mMAPF_env/MAPF_env/envs/baseenv.py", line 350, in <listcomp>
    observations = [self._observe(agent) for agent in range(1, self.num_agents+1)]
  File "/home/bld/HK_RL/RLagents_v3/mMAPF_env/MAPF_env/envs/baseenv.py", line 399, in _observe
    if i>=self.world.state.shape[0] or i<0 or j>=self.world.state.shape[1] or j<0:
KeyboardInterrupt
Traceback (most recent call last):
  File "scripts_0.py", line 150, in <module>
    train_a2c(env, actor_net, critic_net)
  File "scripts_0.py", line 88, in train_a2c
    result = env.env.parse_path(padded_paths)
  File "/home/bld/HK_RL/RLagents_v3/mMAPF_env/MAPF_env/envs/baseenv.py", line 350, in parse_path
    observations = [self._observe(agent) for agent in range(1, self.num_agents+1)]
  File "/home/bld/HK_RL/RLagents_v3/mMAPF_env/MAPF_env/envs/baseenv.py", line 350, in <listcomp>
    observations = [self._observe(agent) for agent in range(1, self.num_agents+1)]
  File "/home/bld/HK_RL/RLagents_v3/mMAPF_env/MAPF_env/envs/baseenv.py", line 399, in _observe
    if i>=self.world.state.shape[0] or i<0 or j>=self.world.state.shape[1] or j<0:
KeyboardInterrupt