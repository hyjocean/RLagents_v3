device: cpu
padded_paths:[[(4, 1), (9, 0)], [(4, 2), (8, 0)], [(4, 3), (8, 1)], [(3, 3), (7, 1)], [(3, 4), (7, 2)], [(3, 5), (7, 3)], [(2, 5), (7, 4)]]
Epoch 0: Actor Loss = 0.6284015774726868
padded_paths:[[(0, 5), (9, 8)], [(0, 4), (9, 7)], [(1, 4), (8, 7)], [(2, 4), (7, 7)], [(3, 4), (6, 7)], [(3, 3), (5, 7)], [(3, 2), (4, 7)], [(3, 1), (3, 7)], [(3, 0), (2, 7)], [(3, 0), (2, 6)]]
padded_paths:[[(8, 0), (0, 9)], [(7, 0), (0, 8)], [(6, 0), (1, 8)], [(5, 0), (2, 8)], [(4, 0), (3, 8)], [(3, 0), (4, 8)], [(2, 0), (5, 8)], [(2, 0), (6, 8)]]
padded_paths:[[(6, 11), (2, 13)], [(6, 10), (2, 12)], [(6, 9), (2, 11)], [(7, 9), (3, 11)], [(7, 8), (3, 10)], [(7, 7), (3, 9)], [(7, 6), (3, 8)], [(7, 5), (3, 7)], [(7, 4), (4, 7)], [(6, 4), (4, 6)], [(6, 3), (4, 5)], [(6, 2), (5, 5)], [(6, 1), (6, 5)], [(6, 1), (7, 5)]]
padded_paths:[[(6, 9), (8, 6)], [(5, 9), (7, 6)], [(4, 9), (7, 5)], [(4, 9), (7, 4)], [(4, 9), (7, 3)], [(4, 9), (7, 2)], [(4, 9), (7, 1)], [(4, 9), (7, 0)], [(4, 9), (8, 0)], [(4, 9), (9, 0)]]
padded_paths:[[(0, 0), (6, 1)], [(0, 1), (6, 2)], [(1, 1), (7, 2)], [(2, 1), (8, 2)], [(2, 2), (8, 3)], [(2, 3), (8, 4)], [(3, 3), (8, 5)], [(3, 4), (8, 6)], [(3, 5), (8, 7)], [(3, 6), (8, 8)], [(3, 7), (8, 8)], [(3, 8), (8, 8)]]
padded_paths:[[(5, 0), (7, 5)], [(6, 0), (6, 5)], [(7, 0), (6, 4)], [(8, 0), (5, 4)], [(8, 1), (5, 3)], [(8, 2), (4, 3)], [(8, 3), (4, 2)], [(8, 4), (4, 1)], [(8, 5), (4, 0)], [(8, 6), (4, 0)]]
padded_paths:[[(0, 8), (9, 2)], [(0, 7), (9, 3)], [(1, 7), (8, 3)], [(2, 7), (7, 3)], [(2, 6), (6, 3)], [(3, 6), (6, 4)], [(3, 5), (5, 4)], [(3, 4), (4, 4)], [(3, 4), (4, 5)], [(4, 4), (4, 5)], [(4, 3), (4, 6)], [(4, 2), (4, 6)], [(5, 2), (4, 6)], [(6, 2), (4, 6)], [(7, 2), (4, 6)]]
padded_paths:[[(2, 1), (13, 9)], [(2, 2), (12, 9)], [(2, 3), (11, 9)], [(2, 4), (10, 9)], [(2, 5), (9, 9)], [(2, 6), (8, 9)], [(2, 7), (7, 9)], [(3, 7), (6, 9)], [(4, 7), (6, 10)], [(4, 7), (5, 10)]]
padded_paths:[[(6, 5), (6, 3)], [(7, 5), (6, 2)], [(7, 4), (6, 1)], [(7, 3), (6, 0)], [(7, 2), (5, 0)], [(7, 1), (4, 0)], [(7, 0), (3, 0)], [(7, 0), (2, 0)], [(7, 0), (1, 0)], [(7, 0), (0, 0)]]
padded_paths:[[(3, 1), (7, 9)], [(4, 1), (7, 9)], [(4, 2), (7, 9)], [(4, 3), (7, 9)], [(4, 4), (7, 9)], [(5, 4), (7, 9)], [(5, 5), (7, 9)], [(5, 6), (7, 9)]]
padded_paths:[[(3, 3), (6, 8)], [(3, 4), (6, 9)], [(4, 4), (7, 9)], [(5, 4), (7, 10)], [(6, 4), (8, 10)], [(6, 5), (8, 11)], [(7, 5), (8, 12)], [(7, 6), (9, 12)], [(8, 6), (10, 12)], [(8, 7), (11, 12)], [(8, 8), (12, 12)], [(8, 9), (12, 12)], [(9, 9), (12, 12)], [(10, 9), (12, 12)], [(11, 9), (12, 12)], [(12, 9), (12, 12)], [(13, 9), (12, 12)], [(14, 9), (12, 12)], [(14, 10), (12, 12)], [(14, 11), (12, 12)], [(14, 12), (12, 12)]]
padded_paths:[[(6, 3), (0, 9)], [(5, 3), (1, 9)], [(5, 4), (2, 9)], [(4, 4), (3, 9)], [(3, 4), (4, 9)], [(2, 4), (5, 9)], [(1, 4), (6, 9)], [(1, 5), (6, 9)], [(1, 6), (6, 9)], [(1, 7), (6, 9)], [(1, 8), (6, 9)]]
padded_paths:[[(7, 6), (7, 4)], [(8, 6), (7, 3)], [(8, 5), (7, 2)], [(8, 4), (7, 1)], [(7, 4), (7, 0)], [(7, 3), (6, 0)], [(7, 2), (5, 0)], [(7, 1), (5, 0)], [(6, 1), (5, 0)]]
padded_paths:[[(6, 10), (8, 0)], [(6, 9), (9, 0)], [(7, 9), (9, 1)], [(7, 8), (10, 1)], [(7, 7), (10, 2)], [(7, 7), (10, 3)], [(7, 7), (10, 4)], [(7, 7), (11, 4)], [(7, 7), (12, 4)], [(7, 7), (12, 5)], [(7, 7), (12, 6)], [(7, 7), (13, 6)], [(7, 7), (13, 7)], [(7, 7), (14, 7)], [(7, 7), (14, 8)], [(7, 7), (14, 9)], [(7, 7), (14, 10)]]
/home/bld/anaconda3/envs/raylib2/lib/python3.8/site-packages/torch/autograd/__init__.py:147: UserWarning: CUDA initialization: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 2: out of memory (Triggered internally at  ../c10/cuda/CUDAFunctions.cpp:115.)
  Variable._execution_engine.run_backward(
padded_paths:[[(3, 10), (6, 1)], [(3, 9), (6, 2)], [(2, 9), (6, 3)], [(2, 9), (6, 4)], [(2, 9), (6, 5)], [(2, 9), (7, 5)], [(2, 9), (8, 5)], [(2, 9), (8, 6)], [(2, 9), (8, 7)], [(2, 9), (8, 8)], [(2, 9), (8, 9)], [(2, 9), (8, 10)], [(2, 9), (8, 11)], [(2, 9), (8, 12)], [(2, 9), (8, 13)], [(2, 9), (9, 13)], [(2, 9), (10, 13)]]
padded_paths:[[(2, 13), (6, 0)], [(2, 14), (6, 1)], [(1, 14), (5, 1)], [(1, 14), (4, 1)], [(1, 14), (3, 1)], [(1, 14), (3, 2)], [(1, 14), (3, 3)], [(1, 14), (2, 3)], [(1, 14), (1, 3)], [(1, 14), (1, 4)], [(1, 14), (1, 5)], [(1, 14), (1, 6)], [(1, 14), (0, 6)], [(1, 14), (0, 7)], [(1, 14), (0, 8)], [(1, 14), (0, 9)]]
padded_paths:[[(4, 8), (16, 3)], [(5, 8), (15, 3)], [(6, 8), (14, 3)], [(7, 8), (13, 3)], [(8, 8), (13, 4)], [(9, 8), (13, 5)], [(10, 8), (13, 6)], [(11, 8), (12, 6)], [(12, 8), (11, 6)], [(13, 8), (10, 6)], [(14, 8), (10, 7)], [(15, 8), (10, 8)], [(16, 8), (10, 9)], [(17, 8), (9, 9)], [(18, 8), (9, 10)], [(18, 9), (8, 10)], [(19, 9), (7, 10)], [(19, 9), (7, 11)], [(19, 9), (6, 11)], [(19, 9), (5, 11)], [(19, 9), (4, 11)], [(19, 9), (4, 12)], [(19, 9), (4, 13)]]
padded_paths:[[(0, 4), (6, 7)], [(1, 4), (5, 7)], [(1, 3), (5, 6)], [(2, 3), (5, 5)], [(3, 3), (5, 4)], [(4, 3), (4, 4)], [(5, 3), (4, 4)], [(6, 3), (4, 4)], [(7, 3), (4, 4)], [(7, 4), (4, 4)], [(8, 4), (4, 4)], [(9, 4), (4, 4)], [(10, 4), (4, 4)], [(10, 5), (4, 4)], [(11, 5), (4, 4)], [(11, 6), (4, 4)], [(12, 6), (4, 4)]]
padded_paths:[[(6, 11), (5, 10)], [(5, 11), (5, 9)], [(5, 10), (5, 8)], [(5, 9), (4, 8)], [(5, 8), (4, 7)], [(5, 7), (4, 6)], [(5, 6), (4, 6)], [(5, 5), (4, 6)], [(5, 4), (4, 6)], [(5, 3), (4, 6)], [(5, 2), (4, 6)], [(5, 1), (4, 6)]]
padded_paths:[[(9, 6), (4, 9)], [(9, 7), (3, 9)], [(8, 7), (3, 8)], [(8, 8), (3, 7)], [(8, 9), (3, 6)], [(7, 9), (2, 6)], [(6, 9), (2, 5)]]
padded_paths:[[(9, 2), (3, 0)], [(9, 3), (4, 0)], [(8, 3), (5, 0)], [(7, 3), (5, 1)], [(6, 3), (5, 2)], [(6, 4), (6, 2)], [(6, 5), (7, 2)], [(5, 5), (8, 2)], [(4, 5), (8, 3)], [(4, 6), (8, 4)], [(4, 7), (8, 5)], [(4, 8), (8, 6)], [(4, 9), (8, 7)]]
padded_paths:[[(0, 1), (2, 8)], [(0, 2), (3, 8)], [(0, 3), (3, 9)], [(0, 4), (4, 9)], [(1, 4), (4, 9)], [(2, 4), (4, 9)]]
padded_paths:[[(8, 0), (12, 12)], [(8, 1), (11, 12)], [(8, 2), (11, 11)], [(7, 2), (11, 10)], [(7, 3), (11, 9)], [(7, 4), (11, 8)], [(7, 5), (10, 8)], [(6, 5), (10, 7)], [(6, 6), (9, 7)], [(5, 6), (8, 7)], [(4, 6), (7, 7)], [(3, 6), (7, 6)], [(3, 7), (7, 5)], [(2, 7), (7, 4)], [(1, 7), (7, 3)], [(0, 7), (7, 2)]]
padded_paths:[[(3, 3), (1, 2)], [(3, 4), (1, 3)], [(3, 5), (1, 4)], [(4, 5), (0, 4)], [(5, 5), (0, 5)], [(5, 6), (0, 6)], [(6, 6), (0, 7)], [(7, 6), (0, 8)]]
padded_paths:[[(6, 4), (3, 4)], [(6, 3), (3, 3)], [(7, 3), (3, 2)], [(7, 2), (4, 2)], [(7, 1), (5, 2)], [(7, 1), (6, 2)], [(7, 1), (7, 2)], [(7, 1), (8, 2)]]
padded_paths:[[(8, 0), (5, 5)], [(8, 1), (5, 4)], [(8, 2), (4, 4)], [(9, 2), (3, 4)], [(9, 3), (3, 3)], [(9, 4), (2, 3)], [(9, 5), (1, 3)], [(9, 6), (1, 3)], [(9, 7), (1, 3)], [(9, 8), (1, 3)], [(9, 9), (1, 3)]]
padded_paths:[[(7, 1), (8, 3)], [(7, 0), (8, 4)], [(7, 0), (8, 5)], [(7, 0), (7, 5)], [(7, 0), (7, 6)], [(7, 0), (6, 6)], [(7, 0), (5, 6)], [(7, 0), (4, 6)], [(7, 0), (3, 6)], [(7, 0), (2, 6)], [(7, 0), (1, 6)], [(7, 0), (0, 6)]]
padded_paths:[[(14, 14), (15, 9)], [(13, 14), (14, 9)], [(12, 14), (13, 9)], [(11, 14), (12, 9)], [(10, 14), (11, 9)], [(9, 14), (10, 9)], [(8, 14), (10, 10)], [(7, 14), (9, 10)], [(6, 14), (8, 10)], [(5, 14), (8, 11)], [(4, 14), (7, 11)], [(4, 13), (6, 11)], [(4, 13), (5, 11)], [(4, 13), (4, 11)]]
padded_paths:[[(11, 3), (5, 3)], [(12, 3), (5, 2)], [(12, 4), (4, 2)], [(12, 5), (4, 2)]]
padded_paths:[[(4, 0), (2, 10)], [(4, 1), (2, 11)], [(3, 1), (1, 11)], [(3, 2), (1, 11)], [(3, 3), (1, 11)], [(3, 4), (1, 11)], [(3, 5), (1, 11)], [(3, 6), (1, 11)], [(3, 7), (1, 11)], [(3, 8), (1, 11)], [(3, 9), (1, 11)], [(3, 10), (1, 11)], [(3, 11), (1, 11)], [(3, 12), (1, 11)], [(3, 13), (1, 11)], [(3, 14), (1, 11)], [(4, 14), (1, 11)]]
padded_paths:[[(5, 6), (2, 1)], [(5, 7), (2, 2)], [(6, 7), (3, 2)], [(6, 7), (4, 2)], [(6, 7), (5, 2)], [(6, 7), (5, 3)], [(6, 7), (6, 3)], [(6, 7), (7, 3)]]
padded_paths:[[(0, 5), (1, 4)], [(1, 5), (2, 4)], [(2, 5), (3, 4)], [(2, 4), (3, 5)], [(2, 3), (3, 6)]]
padded_paths:[[(5, 6), (1, 9)], [(4, 6), (2, 9)], [(3, 6), (3, 9)], [(3, 7), (4, 9)], [(3, 8), (5, 9)], [(3, 8), (6, 9)], [(3, 8), (6, 8)], [(3, 8), (6, 7)], [(3, 8), (6, 6)], [(3, 8), (6, 5)], [(3, 8), (6, 4)], [(3, 8), (7, 4)], [(3, 8), (7, 3)], [(3, 8), (7, 2)], [(3, 8), (7, 1)], [(3, 8), (8, 1)], [(3, 8), (9, 1)], [(3, 8), (9, 0)], [(3, 8), (10, 0)], [(3, 8), (11, 0)], [(3, 8), (12, 0)]]
padded_paths:[[(19, 7), (1, 19)], [(18, 7), (1, 18)], [(17, 7), (2, 18)], [(16, 7), (3, 18)], [(16, 8), (3, 17)], [(15, 8), (3, 16)], [(14, 8), (3, 15)], [(13, 8), (3, 14)], [(12, 8), (3, 13)], [(12, 9), (3, 12)], [(11, 9), (3, 11)], [(10, 9), (3, 10)], [(10, 10), (3, 9)], [(9, 10), (3, 9)], [(9, 11), (3, 9)], [(9, 12), (3, 9)], [(8, 12), (3, 9)], [(7, 12), (3, 9)], [(7, 13), (3, 9)], [(6, 13), (3, 9)], [(6, 14), (3, 9)], [(5, 14), (3, 9)], [(5, 15), (3, 9)], [(4, 15), (3, 9)], [(3, 15), (3, 9)], [(3, 16), (3, 9)], [(3, 17), (3, 9)]]
padded_paths:[[(2, 4), (8, 6)], [(3, 4), (9, 6)], [(3, 5), (10, 6)], [(4, 5), (11, 6)], [(4, 6), (11, 7)], [(5, 6), (11, 8)], [(6, 6), (11, 9)], [(7, 6), (11, 10)], [(7, 7), (11, 11)], [(7, 8), (11, 12)], [(8, 8), (11, 12)], [(8, 9), (11, 12)], [(8, 10), (11, 12)], [(8, 11), (11, 12)], [(9, 11), (11, 12)], [(9, 12), (11, 12)], [(9, 13), (11, 12)], [(9, 14), (11, 12)]]
padded_paths:[[(2, 5), (9, 8)], [(3, 5), (9, 7)], [(4, 5), (8, 7)], [(4, 6), (8, 7)], [(4, 7), (8, 7)], [(4, 8), (8, 7)], [(4, 9), (8, 7)]]
padded_paths:[[(13, 14), (11, 13)], [(14, 14), (11, 12)], [(14, 13), (10, 12)], [(14, 12), (9, 12)], [(14, 11), (9, 11)], [(14, 10), (8, 11)], [(14, 9), (7, 11)], [(14, 9), (6, 11)], [(14, 9), (5, 11)], [(14, 9), (5, 10)], [(14, 9), (5, 9)], [(14, 9), (5, 8)], [(14, 9), (5, 7)], [(14, 9), (4, 7)], [(14, 9), (4, 6)], [(14, 9), (4, 5)]]
Traceback (most recent call last):
  File "scripts_0.py", line 150, in <module>
    train_a2c(env, actor_net, critic_net)
  File "scripts_0.py", line 103, in train_a2c
    actor_optimizer.step()
  File "/home/bld/anaconda3/envs/raylib2/lib/python3.8/site-packages/torch/optim/optimizer.py", line 88, in wrapper
    return func(*args, **kwargs)
  File "/home/bld/anaconda3/envs/raylib2/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/home/bld/anaconda3/envs/raylib2/lib/python3.8/site-packages/torch/optim/adam.py", line 107, in step
    F.adam(params_with_grad,
  File "/home/bld/anaconda3/envs/raylib2/lib/python3.8/site-packages/torch/optim/_functional.py", line 87, in adam
    exp_avg_sq.mul_(beta2).addcmul_(grad, grad, value=1 - beta2)
KeyboardInterrupt
Traceback (most recent call last):
  File "scripts_0.py", line 150, in <module>
    train_a2c(env, actor_net, critic_net)
  File "scripts_0.py", line 103, in train_a2c
    actor_optimizer.step()
  File "/home/bld/anaconda3/envs/raylib2/lib/python3.8/site-packages/torch/optim/optimizer.py", line 88, in wrapper
    return func(*args, **kwargs)
  File "/home/bld/anaconda3/envs/raylib2/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/home/bld/anaconda3/envs/raylib2/lib/python3.8/site-packages/torch/optim/adam.py", line 107, in step
    F.adam(params_with_grad,
  File "/home/bld/anaconda3/envs/raylib2/lib/python3.8/site-packages/torch/optim/_functional.py", line 87, in adam
    exp_avg_sq.mul_(beta2).addcmul_(grad, grad, value=1 - beta2)
KeyboardInterrupt